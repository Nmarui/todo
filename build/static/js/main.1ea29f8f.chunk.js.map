{"version":3,"sources":["Todolist/Todoing.js","Todolist/Todoinput.js","Todolist/Todolist.js","index.js"],"names":["Todoing","this","props","num1","list","map","value","key","checked","type","onChange","changeChecked","bind","title","onClick","delItem","num2","Component","Todoinput","handleInput","e","keyCode","addItem","target","handleChange","setState","name","onKeyDown","Todolist","msg","temp","state","push","Num","localStorage","setItem","JSON","stringify","splice","i","parse","getItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ea29f8f.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Todoing extends Component {\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1>正在进行-----<span>{this.props.num1}</span></h1>\r\n                <ul>\r\n                    {\r\n                        this.props.list.map((value, key) => {\r\n                            if (!value.checked) {\r\n                                return (\r\n                                    <li key={key}>\r\n                                        <input type=\"checkbox\" checked={value.checked} onChange={this.props.changeChecked.bind(this, key)}/>\r\n                                        {value.title}\r\n                                        <button onClick={this.props.delItem.bind(this, key)}>删除</button>\r\n                                    </li>\r\n                                )\r\n                            }\r\n                            return ''\r\n                        })\r\n                    }\r\n                </ul>\r\n                <h1>已经完成-----<span>{this.props.num2}</span></h1>\r\n                <ul>\r\n                    {\r\n                        this.props.list.map((value, key) => {\r\n                            if (value.checked) {\r\n                                return (\r\n                                    <li key={key}>\r\n                                        <input type=\"checkbox\" checked={value.checked}  onChange={this.props.changeChecked.bind(this, key)}/>\r\n                                        {value.title}\r\n                                        <button onClick={this.props.delItem.bind(this, key)}>删除</button>\r\n                                    </li>\r\n                                )\r\n                            }\r\n                            return ''\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Todoinput extends Component {\r\n    handleInput = (e)=>{\r\n        if(e.keyCode === 13){\r\n            this.props.addItem(e.target.value);\r\n        }\r\n    }\r\n    handleChange = (e)=>{\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    \r\n    \r\n    render(){\r\n        return(\r\n            <div>\r\n                <div>\r\n                    <input name=\"inp\" onKeyDown={this.handleInput} onChange={this.handleChange}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react'\r\nimport Todoing from './Todoing';\r\nimport Todoinput from './Todoinput';\r\n\r\n\r\n\r\nexport default class Todolist extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            list: JSON.parse(localStorage.getItem('todolist'))||[],\r\n            num1:0,\r\n            num2:0\r\n        }\r\n    }\r\n    addItem = (msg) => {\r\n        const temp = {\r\n            title: msg,\r\n            checked: false\r\n        }\r\n        const list = this.state.list\r\n        list.push(temp)\r\n        this.setState({\r\n            list: list\r\n        },()=>{\r\n            this.Num();\r\n        })\r\n        localStorage.setItem('todolist', JSON.stringify(list))\r\n    }\r\n    delItem = (msg) => {\r\n        const list = this.state.list\r\n        list.splice(msg, 1)\r\n        this.setState({\r\n            list: list\r\n        },()=>{\r\n            this.Num();\r\n        })\r\n        localStorage.setItem('todolist', JSON.stringify(list))\r\n\r\n    }\r\n    changeChecked = (msg) => {\r\n        const list = this.state.list\r\n        list[msg].checked = !list[msg].checked\r\n        this.setState({\r\n            list: list\r\n        },()=>{\r\n            this.Num();\r\n        })\r\n        localStorage.setItem('todolist', JSON.stringify(list))\r\n    }\r\n    Num=()=>{\r\n        const list = this.state.list;\r\n        let num1=0,num2=0\r\n        for(var i in this.state.list){\r\n            if(!list[i].checked){\r\n                num1++;\r\n            }else{\r\n                num2++;\r\n            }\r\n        }\r\n        this.setState({\r\n            num1:num1,num2:num2\r\n        })\r\n    }\r\n    //生命周期函数\r\n    componentDidMount() {\r\n        const list = JSON.parse(localStorage.getItem('todolist'))\r\n        if (list) {\r\n            this.setState({\r\n                list: list\r\n            })\r\n        }\r\n        this.Num();\r\n    }\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Todoinput addItem={this.addItem}/>\r\n                <Todoing delItem={this.delItem} list={this.state.list} num1={this.state.num1} num2={this.state.num2} addItem={this.addItem} changeChecked={this.changeChecked}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Todolist from './Todolist/Todolist';\r\n\r\nReactDOM.render(\r\n    <Todolist/>,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}